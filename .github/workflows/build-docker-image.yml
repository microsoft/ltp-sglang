# Copyright (c) Microsoft Corporation.
# Licensed under the MIT License.

name: build-ltp-docker-image

on:
  push:
    branches:
    - main
    - release/*
  pull_request:
    branches:
    - main
    - release/*
  release:
    types:
    - published

jobs:
  build-docker-image:
    name: Build ${{ matrix.name }}
    runs-on: ${{ matrix.runner }}
    timeout-minutes: 60
    permissions:
      contents: read
    strategy:
      fail-fast: true
      matrix:
        include:
        - name: cuda
          base-image: lmsysorg/sglang:v0.4.10.post2-cu126
          platforms: linux/amd64
          runner: ubuntu-latest
        - name: rocm
          base-image: lmsysorg/sglang:v0.4.10.post2-rocm630-mi30x
          platforms: linux/amd64
          runner: self-hosted
    steps:
      - name: Checkout target branch
        uses: actions/checkout@v4
      - name: Free disk space
        run: |
          mkdir -p /tmp/emptydir
          for dir in \
            /usr/share/swift /usr/share/dotnet /usr/local/share/powershell /usr/local/share/chromium /usr/local/lib/android /usr/local/lib/node_modules \
            /opt/ghc /opt/hostedtoolcache/CodeQL /opt/hostedtoolcache/go /opt/hostedtoolcache/node /opt/hostedtoolcache/PyPy
          do
            sudo rsync -a --delete /tmp/emptydir/ ${dir} ||:
          done
          sudo docker system prune -a --volumes --force ||:
          df -h
      - name: Prepare image tag
        id: tag
        run: |
          TAGS="${{ secrets.AZURE_CR_URI }}/sglang/main:${{ matrix.name }}"
          if [[ "${{ github.event_name }}" == "push" ]] && [[ "${{ github.ref }}" == "refs/heads/release/"* ]]; then
            TAGS=$(sed "s/main:/release:${GITHUB_REF##*/}-/g" <<< ${TAGS})
          fi
          if [[ "${{ github.event_name }}" == "pull_request" ]] && [[ "${{ github.base_ref }}" == "release/"* ]]; then
            TAGS=$(sed "s/main:/release:${GITHUB_BASE_REF##*/}-/g" <<< ${TAGS})
          fi
          if [[ "${{ github.event_name }}" == "release" ]]; then
            TAGS=$(sed "s/main:/stable:${GITHUB_REF##*/}-/g" <<< ${TAGS})
          fi
          echo "tags=${TAGS}" >> "$GITHUB_OUTPUT"
      - name: Echo image tag
        run: echo ${{ steps.tag.outputs.tags }}
      - name: Login to ACR
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.AZURE_CR_URI }}
          username: ${{ secrets.DOCKER_LOGIN_USERNAME }}
          password: ${{ secrets.DOCKER_LOGIN_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          platforms: ${{ matrix.platforms }}
          context: .
          file: scripts/ltp_scripts/dev.${{ matrix.name }}.dockerfile
          push: ${{ github.event_name == 'pull_request' }}
          tags: ${{ steps.tag.outputs.tags }}
          no-cache: true
          build-args: |
            BASE_IMAGE: ${{ matrix.base-image }}
            SGLANG_SRC: ./
          labels: |
            org.opencontainers.image.revision=${{ github.sha }}
